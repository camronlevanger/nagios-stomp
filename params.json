{"name":"nagios-stomp","tagline":"A Nagios Stomp Message Protocol Monitor","body":"nagios-stomp\r\n============\r\n\r\nA Nagios Stomp Message Protocol Monitor\r\n-------------------------------------\r\n\r\nA Nagios NRPE script that allows you to monitor a message queue server using\r\nthe STOMP protocol. While it is fairly easy with Nagios to monitor whether\r\nor not your server proccess is running, unfortunately that can't tell us\r\nif that server is available and accepting connections.\r\n\r\nWith nagios-stomp you can actually open a connection to your queue servers and\r\nhave the confidence of knowing that they are responding correctly to your systems.\r\n\r\nThis script is designed to be run on Nagios client servers using the NRPE daemon.\r\n\r\nFor more information on using Nagios and NRPE visit the following link:\r\n\r\n[http://nagios.sourceforge.net/docs/nrpe/](http://nagios.sourceforge.net/docs/nrpe/)\r\n\r\nInstallation and Usage\r\n----------------------\r\n\r\n###Download and Install nagios-stomp\r\n\r\n####Clone Source and Install Manually\r\nThis is a pretty simple option for this small codebase. We will clone the  source into\r\nthe directory where we want to keep our Nagios plugins, install the required libraries,\r\nand finally set proper permissions.\r\n\r\n\tcd /path/to/where/you/want/it\r\n\tgit clone git@github.com:camronlevanger/nagios-stomp.git\r\n\tcd nagios-stomp\r\n\tpip install -r requirements.txt\r\n\tchmod +x check_stomp_conn.py\r\n\r\nThen restart the NRPE service, on Ubuntu that looks like:\r\n\r\n\tservice nagios-nrpe-server restart\r\n\r\n####Install Using Pip\r\nComing Soon\r\n\r\n###Add nagios-stomp Command to NRPE Client\r\nNow we need to edit our nrpe.cfg file and add our new plugin command.\r\n\r\n\tvim /etc/nagios/nrpe.cfg\r\n\r\nNow add the check_stomp_conn command to the list.\r\n\r\n\t command[check_stomp_conn]=/path/to/where/you/put/it/check_stomp_conn.py\r\n\r\nBy default nagios-stomp connects to localhost on port 61613, with a username and\r\npassword of admin, and subscribes to default_topic. If this works for your setup\r\n(doubtful) then the above command config is all that is needed. If that does not reflect\r\nthe location of the message server you need to monitor, you can also pass in the\r\nvariables as args to the command.\r\n\r\nTo pass args to the command make sure you set in nrpe.cfg\r\n\r\n\tdont_blame_nrpe=1\r\n\r\nAnd then the args are\r\n\r\n\t-H host_uri\r\n\t-P port_number\r\n\t-u username\r\n\t-p password\r\n\t-t topic_name\r\n\r\n###Add nagios-stomp to Nagios Checks on Your Nagios Monitoring Server\r\nDefine a new service for nagios-stomp\r\n\r\n\tdefine service {\r\n\t\tuse\tgeneric-service (or your appropriate defined service)\r\n\t\thost_name\tname_of_your_client_host\r\n\t\tservice_description\tWeb Socket Server Monitor\r\n\t\tcheck_command\tcheck_stomp_conn\r\n\t}\r\n\r\nResart the Nagios host.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}